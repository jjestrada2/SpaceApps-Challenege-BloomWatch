"""Initial schema

Revision ID: 932975d39fb8
Revises:
Create Date: 2025-06-18 23:40:25.359309

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "932975d39fb8"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_mundiai_maps",
        sa.Column("id", sa.String(length=12), nullable=False),
        sa.Column("project_id", sa.String(length=12), nullable=True),
        sa.Column("owner_uuid", sa.UUID(), nullable=False),
        sa.Column("layers", sa.ARRAY(sa.String(length=12)), nullable=True),
        sa.Column("display_as_diff", sa.Boolean(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "last_edited",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("soft_deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_mundiai_projects",
        sa.Column("id", sa.String(length=12), nullable=False),
        sa.Column("owner_uuid", sa.UUID(), nullable=False),
        sa.Column("editor_uuids", sa.ARRAY(sa.UUID()), nullable=True),
        sa.Column("viewer_uuids", sa.ARRAY(sa.UUID()), nullable=True),
        sa.Column("link_accessible", sa.Boolean(), nullable=True),
        sa.Column("maps", sa.ARRAY(sa.String(length=12)), nullable=True),
        sa.Column("map_diff_messages", sa.ARRAY(sa.Text()), nullable=True),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("soft_deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chat_completion_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("map_id", sa.String(length=12), nullable=False),
        sa.Column("sender_id", sa.UUID(), nullable=False),
        sa.Column(
            "message_json", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["map_id"],
            ["user_mundiai_maps.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("map_id", sa.String(length=12), nullable=False),
        sa.Column("role", sa.Text(), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column(
            "content_json", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("tool_call_id", sa.Text(), nullable=True),
        sa.Column("tool_name", sa.Text(), nullable=True),
        sa.Column("tool_args", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "tool_response", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("message_index", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["map_id"],
            ["user_mundiai_maps.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project_postgres_connections",
        sa.Column("id", sa.String(length=12), nullable=False),
        sa.Column("project_id", sa.String(length=12), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("connection_uri", sa.Text(), nullable=False),
        sa.Column("connection_name", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["user_mundiai_projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "project_id",
            "user_id",
            "connection_uri",
            name="unique_project_user_connection",
        ),
    )
    op.create_table(
        "map_layers",
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("layer_id", sa.String(length=12), nullable=False),
        sa.Column("owner_uuid", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("s3_key", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("raster_cog_url", sa.String(), nullable=True),
        sa.Column("postgis_connection_id", sa.String(length=12), nullable=True),
        sa.Column("postgis_query", sa.String(), nullable=True),
        sa.Column("metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("bounds", sa.ARRAY(sa.Float()), nullable=True),
        sa.Column("geometry_type", sa.String(), nullable=True),
        sa.Column("feature_count", sa.Integer(), nullable=True),
        sa.Column("size_bytes", sa.BIGINT(), nullable=True),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "last_edited",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["postgis_connection_id"],
            ["project_postgres_connections.id"],
        ),
        sa.PrimaryKeyConstraint("layer_id"),
    )
    op.create_table(
        "project_postgres_summary",
        sa.Column("id", sa.String(length=12), nullable=False),
        sa.Column("connection_id", sa.String(length=12), nullable=False),
        sa.Column("friendly_name", sa.String(length=255), nullable=False),
        sa.Column("summary_md", sa.Text(), nullable=False),
        sa.Column(
            "generated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["connection_id"],
            ["project_postgres_connections.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "layer_styles",
        sa.Column("style_id", sa.String(length=12), nullable=False),
        sa.Column("layer_id", sa.String(length=12), nullable=False),
        sa.Column(
            "style_json", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("parent_style_id", sa.String(length=12), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column(
            "created_on",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["layer_id"],
            ["map_layers.layer_id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_style_id"],
            ["layer_styles.style_id"],
        ),
        sa.PrimaryKeyConstraint("style_id"),
    )
    op.create_table(
        "map_layer_styles",
        sa.Column("map_id", sa.String(length=12), nullable=False),
        sa.Column("layer_id", sa.String(length=12), nullable=False),
        sa.Column("style_id", sa.String(length=12), nullable=False),
        sa.ForeignKeyConstraint(
            ["layer_id"],
            ["map_layers.layer_id"],
        ),
        sa.ForeignKeyConstraint(
            ["map_id"],
            ["user_mundiai_maps.id"],
        ),
        sa.ForeignKeyConstraint(
            ["style_id"],
            ["layer_styles.style_id"],
        ),
        sa.PrimaryKeyConstraint("map_id", "layer_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("map_layer_styles")
    op.drop_table("layer_styles")
    op.drop_table("project_postgres_summary")
    op.drop_table("map_layers")
    op.drop_table("project_postgres_connections")
    op.drop_table("messages")
    op.drop_table("chat_completion_messages")
    op.drop_table("user_mundiai_projects")
    op.drop_table("user_mundiai_maps")
    # ### end Alembic commands ###
